# When testing changes, the easiest way to reload the theme is with /RELOAD.
# This reloads the configuration file too, so if you did any changes remember
# to /SAVE it first. Remember also that /SAVE overwrites the theme file with
# old data so keep backups :)

# TEMPLATES:

# The real text formats that irssi uses are the ones you can find with
# /FORMAT command. Back in the old days all the colors and texts were mixed
# up in those formats, and it was really hard to change the colors since you
# might have had to change them in tens of different places. So, then came
# this templating system.

# Now the /FORMATs don't have any colors in them, and they also have very
# little other styling. Most of the stuff you need to change is in this
# theme file. If you can't change something here, you can always go back
# to change the /FORMATs directly, they're also saved in these .theme files.

# So .. the templates. They're those {blahblah} parts you see all over the
# /FORMATs and here. Their usage is simply {name parameter1 parameter2}.
# When irssi sees this kind of text, it goes to find "name" from abstracts
# block below and sets "parameter1" into $0 and "parameter2" into $1 (you
# can have more parameters of course). Templates can have subtemplates.
# Here's a small example:
#   /FORMAT format hello {colorify {underline world}}
#   abstracts = { colorify = "%G$0-%n"; underline = "%U$0-%U"; }
# When irssi expands the templates in "format", the final string would be:
#   hello %G%Uworld%U%n
# ie. underlined bright green "world" text.
# and why "$0-", why not "$0"? $0 would only mean the first parameter,
# $0- means all the parameters. With {underline hello world} you'd really
# want to underline both of the words, not just the hello (and world would
# actually be removed entirely).

# COLORS:

# You can find definitions for the color format codes in docs/formats.txt.

# There's one difference here though. %n format. Normally it means the
# default color of the terminal (white mostly), but here it means the
# "reset color back to the one it was in higher template". For example
# if there was /FORMAT test %g{foo}bar, and foo = "%Y$0%n", irssi would
# print yellow "foo" (as set with %Y) but "bar" would be green, which was
# set at the beginning before the {foo} template. If there wasn't the %g
# at start, the normal behaviour of %n would occur. If you _really_ want
# to use the terminal's default color, use %N.

#############################################################################

# default foreground color (%N) - -1 is the "default terminal color"
default_color = "-1";

# print timestamp/servertag at the end of line, not at beginning
info_eol = "false";

# these characters are automatically replaced with specified color
# (dark grey by default)
replaces = { "[]=" = "%K$*%n"; };

abstracts = {
  ##
  ## generic
  ##

  # text to insert at the beginning of each non-message line
  line_start = "%B-%n!%B-%n ";

  # timestamp styling, nothing by default
  timestamp = "$*";

  # any kind of text that needs hilighting, default is to bold
  hilight = "%_$*%_";

  # any kind of error message, default is bright red
  error = "%R$*%n";

  # channel name is printed
  channel = "%_$*%_";

  # nick is printed
  nick = "%_$*%_";

  # nick host is printed
  nickhost = "[$*]";

  # server name is printed
  server = "%_$*%_";

  # some kind of comment is printed
  comment = "[$*]";

  # reason for something is printed (part, quit, kick, ..)
  reason = "{comment $*}";

  # mode change is printed ([+o nick])
  mode = "{comment $*}";

  ##
  ## channel specific messages
  ##

  # highlighted nick/host is printed (joins)
  channick_hilight = "%C$*%n";
  chanhost_hilight = "{nickhost %c$*%n}";

  # nick/host is printed (parts, quits, etc.)
  channick = "%c$*%n";
  chanhost = "{nickhost $*}";

  # highlighted channel name is printed
  channelhilight = "%c$*%n";

  # ban/ban exception/invite list mask is printed
  ban = "%c$*%n";

  ##
  ## messages
  ##

  # the basic styling of how to print message, $0 = nick mode, $1 = nick
  msgnick = "%K<%n$0$1-%K>%n %|";

  # message from you is printed. "msgownnick" specifies the styling of the
  # nick ($0 part in msgnick) and "ownmsgnick" specifies the styling of the
  # whole line.

  # Example1: You want the message text to be green:
  #  ownmsgnick = "{msgnick $0 $1-}%g";
  # Example2.1: You want < and > chars to be yellow:
  #  ownmsgnick = "%Y{msgnick $0 $1-%Y}%n";
  #  (you'll also have to remove <> from replaces list above)
  # Example2.2: But you still want to keep <> grey for other messages:
  #  pubmsgnick = "%K{msgnick $0 $1-%K}%n";
  #  pubmsgmenick = "%K{msgnick $0 $1-%K}%n";
  #  pubmsghinick = "%K{msgnick $1 $0$2-%n%K}%n";
  #  ownprivmsgnick = "%K{msgnick  $*%K}%n";
  #  privmsgnick = "%K{msgnick  %R$*%K}%n";

  # $0 = nick mode, $1 = nick
  ownmsgnick = "{msgnick $0 $1-}";
  ownnick = "%_$*%n";

  # public message in channel, $0 = nick mode, $1 = nick
  pubmsgnick = "{msgnick $0 $1-}";
  pubnick = "%N$*%n";

  # public message in channel meant for me, $0 = nick mode, $1 = nick
  pubmsgmenick = "{msgnick $0 $1-}";
  menick = "%Y$*%n";

  # public highlighted message in channel
  # $0 = highlight color, $1 = nick mode, $2 = nick
  pubmsghinick = "{msgnick $1 $0$2-%n}";

  # channel name is printed with message
  msgchannel = "%K:%c$*%n";

  # private message, $0 = nick, $1 = host
  privmsg = "[%R$0%K(%r$1-%K)%n] ";

  # private message from you, $0 = "msg", $1 = target nick
  ownprivmsg = "[%r$0%K(%R$1-%K)%n] ";

  # own private message in query
  ownprivmsgnick = "{msgnick  $*}";
  ownprivnick = "%_$*%n";

  # private message in query
  privmsgnick = "{msgnick  %R$*%n}";

  ##
  ## Actions (/ME stuff)
  ##

  # used internally by this theme
  action_core = "%_ * $*%n";

  # generic one that's used by most actions
  action = "{action_core $*} ";

  # own action, both private/public
  ownaction = "{action $*}";

  # own action with target, both private/public
  ownaction_target = "{action_core $0}%K:%c$1%n ";

  # private action sent by others
  pvtaction = "%_ (*) $*%n ";
  pvtaction_query = "{action $*}";

  # public action sent by others
  pubaction = "{action $*}";


  ##
  ## other IRC events
  ##

  # whois
  whois = "%# $[8]0 : $1-";

  # notices
  ownnotice = "[%r$0%K(%R$1-%K)]%n ";
  notice = "%K-%M$*%K-%n ";
  pubnotice_channel = "%K:%m$*";
  pvtnotice_host = "%K(%m$*%K)";
  servernotice = "%g!$*%n ";

  # CTCPs
  ownctcp = "[%r$0%K(%R$1-%K)] ";
  ctcp = "%g$*%n";

  # wallops
  wallop = "%_$*%n: ";
  wallop_nick = "%n$*";
  wallop_action = "%_ * $*%n ";

  # netsplits
  netsplit = "%R$*%n";
  netjoin = "%C$*%n";

  # /names list
  names_prefix = "";
  names_nick = "[%_$0%_$1-] ";
  names_nick_op = "{names_nick $*}";
  names_nick_halfop = "{names_nick $*}";
  names_nick_voice = "{names_nick $*}";
  names_users = "[%g$*%n]";
  names_channel = "%G$*%n";

  # DCC
  dcc = "%g$*%n";
  dccfile = "%_$*%_";

  # DCC chat, own msg/action
  dccownmsg = "[%r$0%K($1-%K)%n] ";
  dccownnick = "%R$*%n";
  dccownquerynick = "%_$*%n";
  dccownaction = "{action $*}";
  dccownaction_target = "{action_core $0}%K:%c$1%n ";

  # DCC chat, others
  dccmsg = "[%G$1-%K(%g$0%K)%n] ";
  dccquerynick = "%G$*%n";
  dccaction = "%_ (*dcc*) $*%n %|";

  ##
  ## statusbar
  ##

  # default background for all statusbars. You can also give
  # the default foreground color for statusbar items.
  sb_background = "%4%w";

  # default backround for "default" statusbar group
  #sb_default_bg = "%4";
  # background for prompt / input line
  sb_prompt_bg = "%n";
  # background for info statusbar
  sb_info_bg = "%8";
  # background for topicbar (same default)
  #sb_topic_bg = "%4";

  # text at the beginning of statusbars. sb-item already puts
  # space there,so we don't use anything by default.
  sbstart = "";
  # text at the end of statusbars. Use space so that it's never
  # used for anything.
  sbend = " ";

  topicsbstart = "{sbstart $*}";
  topicsbend = "{sbend $*}";

  prompt = "[$*] ";

  sb = " %c[%n$*%c]%n";
  sbmode = "(%c+%n$*)";
  sbaway = " (%GzZzZ%n)";
  sbservertag = ":$0 (change with ^X)";
  sbnickmode = "$0";

  # activity in statusbar

  # ',' separator
  sb_act_sep = "%c$*";
  # normal text
  sb_act_text = "%c$*";
  # public message
  sb_act_msg = "%W$*";
  # hilight
  sb_act_hilight = "%M$*";
  # hilight with specified color, $0 = color, $1 = text
  sb_act_hilight_color = "$0$1-%n";
};
formats = {
  "fe-common/irc/dcc" = {
    own_dcc = "{dccownmsg dcc {dccownnick $1}}$2";
    own_dcc_action = "{dccownaction_target $0 $1}$2";
    own_dcc_action_query = "{dccownaction $0}$2";
    own_dcc_ctcp = "{ownctcp ctcp $0}$1 $2";
    dcc_msg = "{dccmsg dcc $0}$1";
    action_dcc = "{dccaction $0}$1";
    action_dcc_query = "{dccaction $0}$1";
    own_dcc_query = "{ownmsgnick {dccownquerynick $0}}$2";
    dcc_msg_query = "{privmsgnick $0}$1";
    dcc_ctcp = "{dcc >>> DCC CTCP {hilight $1} received from {hilight $0}: $2}";
    dcc_chat = "{dcc DCC CHAT from {nick $0} [$1 port $2]}";
    dcc_chat_channel = "{dcc DCC CHAT from {nick $0} [$1 port $2] requested in channel {channel $3}}";
    dcc_chat_not_found = "{dcc No DCC CHAT connection open to {nick $0}}";
    dcc_chat_connected = "{dcc DCC CHAT connection with {nick $0} [$1 port $2] established}";
    dcc_chat_disconnected = "{dcc DCC lost chat to {nick $0}}";
    dcc_send = "{dcc DCC SEND from {nick $0} [$1 port $2]: $3 [$4 bytes]}";
    dcc_send_channel = "{dcc DCC SEND from {nick $0} [$1 port $2]: $3 [$4 bytes] requested in channel {channel $5}}";
    dcc_send_exists = "{dcc DCC already sending file {dccfile $0} for {nick $1}}";
    dcc_send_not_found = "{dcc DCC not sending file {dccfile $1} to {nick $0}}";
    dcc_send_file_open_error = "{dcc DCC can't open file {dccfile $0}: $1}";
    dcc_send_connected = "{dcc DCC sending file {dccfile $0} for {nick $1} [$2 port $3]}";
    dcc_send_complete = "{dcc DCC sent file {dccfile $0} [{hilight $1}kB] for {nick $2} in {hilight $3} secs [{hilight $4kB/s}]}";
    dcc_send_aborted = "{dcc DCC aborted sending file {dccfile $0} for {nick $1}}";
    dcc_get_not_found = "{dcc DCC no file offered by {nick $0}}";
    dcc_get_connected = "{dcc DCC receiving file {dccfile $0} from {nick $1} [$2 port $3]}";
    dcc_get_complete = "{dcc DCC received file {dccfile $0} [$1kB] from {nick $2} in {hilight $3} secs [$4kB/s]}";
    dcc_get_aborted = "{dcc DCC aborted receiving file {dccfile $0} from {nick $1}}";
    dcc_get_write_error = "{dcc DCC error writing to file {dccfile $0}: {comment $1}";
    dcc_unknown_ctcp = "{dcc DCC unknown ctcp {hilight $0} from {nick $1} [$2]}";
    dcc_unknown_reply = "{dcc DCC unknown reply {hilight $0} from {nick $1} [$2]}";
    dcc_unknown_type = "{dcc DCC unknown type {hilight $0}}";
    dcc_invalid_ctcp = "{dcc DCC received CTCP {hilight $0} with invalid parameters from {nick $1}}";
    dcc_connect_error = "{dcc DCC can't connect to {hilight $0} port {hilight $1}}";
    dcc_cant_create = "{dcc DCC can't create file {dccfile $0}}";
    dcc_rejected = "{dcc DCC $0 was rejected by {nick $1} [{hilight $2}]}";
    dcc_request_send = "{dcc DCC $0 request sent to {nick $1}: $2";
    dcc_close = "{dcc DCC $0 close for {nick $1} [{hilight $2}]}";
    dcc_lowport = "{dcc DCC request on a low port ({hilight $0, $1})}";
    dcc_list_header = "{dcc DCC connections}";
    dcc_list_line_chat = "{dcc  $0 $1}";
    dcc_list_line_file = "{dcc  $0 $1: $2k of $3k ($4%%) - $5kB/s - $6}";
    dcc_list_footer = "";
  };
  "fe-common/irc/notifylist" = {
    notify_join = "{icon_join {nick $0}!$1@$2 ($3) has joined {channel $4}}";
    notify_part = "{icon_part {nick $0} has left {channel $4}}";
    notify_away = "{icon_part {nick $0}!$1@$2 ({hilight $3}) - $5 - is now away ({hilight $4})}";
    notify_unaway = "{icon_join {nick $0}!$1@$2 ({hilight $3}) - $4 - is no longer away}";
    notify_online = "{icon_misc online: $0 ({hilight $1})}";
    notify_offline = "{icon_misc offline: $0 ({hilight $1})}";
    notify_list = "{icon_misc $0 - $1 $2 $3}";
    notify_list_empty = "{icon_misc empty notify list}";
  };
  "fe-common/core" = {
    line_start = "{line_start}";
    line_start_irssi = "";
    timestamp = "{timestamp $Z} ";
    servertag = "{icon_block $0 $1-}";
    daychange = "00:00 {icon_misc Day changed to %%d %%b %%Y}";
    talking_with = "{icon_misc now talking with {nick $0}}";
    refnum_too_low = "{icon_err window number must be greater than 1}";
    error_server_sticky = "{icon_err window's server is sticky}";
    set_server_sticky = "{icon_mode window's server is now sticky}";
    unset_server_sticky = "{icon_mode window's server is no longer sticky}";
    window_name_not_unique = "{icon_err window names must be unique}";
    window_level = "{icon_mode window level is now {hilight $0}}";
    window_set_immortal = "window is now immortal";
    window_unset_immortal = "window isn't immortal anymore";
    window_immortal_error = "{icon_err window is immortal}";
    windowlist_header = "Ref Name                 Active item     Server          Level";
    windowlist_line = "$[3]0 %|$[20]1 $[15]2 $[15]3 $4";
    windowlist_footer = "";
    windows_layout_saved = "{icon_misc layout saved}";
    windows_layout_reset = "{icon_misc layout reset}";
    window_info_header = "";
    window_info_footer = "";
    window_info_refnum = "Window  : {hilight #$0}";
    window_info_refnum_sticky = "Window  : {hilight #$0 (sticky)}";
    window_info_name = "Name    : $0";
    window_info_history = "History : $0";
    window_info_immortal = "Immortal: yes";
    window_info_size = "Size    : $0x$1";
    window_info_level = "Level   : $0";
    window_info_server = "Server  : $0";
    window_info_server_sticky = "Server  : $0 (sticky)";
    window_info_theme = "Theme   : $0$1";
    window_info_bound_items_header = "Bounds  : {hilight Name                           Server tag}";
    window_info_bound_item = "        : $[!30]0 $[!15]1 $2";
    window_info_bound_items_footer = "";
    window_info_items_header = "Items   : {hilight Name                           Server tag}";
    window_info_item = "$[7]0: $[!30]1 $2";
    window_info_items_footer = "";
    looking_up = "{icon_join looking up {server $0}}";
    connecting = "{icon_join connecting to {server $0}!$1:$2}";
    connection_established = "{icon_join connected to {server $0}}";
    cant_connect = "{icon_err unable to connect to {server $0}:$1 ({reason $2})}";
    connection_lost = "{icon_part connection to {server $0} lost}";
    lag_disconnected = "{icon_part disconnecting from {server $0} ({reason no PONG reply in $1 seconds})}";
    disconnected = "{icon_part disconnected from {server $0} ({reason $1})}";
    server_quit = "disconnecting from server {server $0} ({reason $1})";
    server_changed = "{icon_mode changed to {hilight $2} ({server $1})}";
    unknown_server_tag = "{icon_err unknown server tag {server $0}}";
    no_connected_servers = "not connected to any servers";
    server_list = "{server $0}: $1:$2 ($3)";
    server_lookup_list = "{server $0}: $1:$2 ($3) (connecting...)";
    server_reconnect_list = "{server $0}: $1:$2 ($3) ($5 left before reconnecting)";
    server_reconnect_removed = "{icon_mode removed reconnection to {server $0}:$1}";
    server_reconnect_not_found = "{icon_err reconnection tag {server $0} not found}";
    setupserver_added = "{icon_mode server {server $0} added}";
    setupserver_removed = "{icon_mode server {server $0} removed}";
    setupserver_not_found = "{icon_err server {server $0} not found}";
    your_nick = "{icon_mode you are known as {nick $0}}";
    join = "{icon_join {nick $0}{nickhost $1}";
    part = "{icon_part {nick $0}!$1 ({reason $3-})}";
    kick = "{icon_part {nick $0} kicked by {nick $2} ({reason $3})}";
    quit = "{icon_part {nick $0}!$1 has quit ({reason $2})}";
    quit_once = "{icon_part {nick $0}!$1 has quit ({reason $2})}";
    invite = "{icon_join {nick $0} invites you to {channel $1}}";
    not_invited = "not invited to a channel!";
    new_topic = "{icon_mode {nick $0} changed topic to \"{reason $2}\"}";
    topic_unset = "{icon_mode {nick $0} unset topic}";
    your_nick_changed = "{icon_mode you are now known as {nick $1}}";
    nick_changed = "{icon_mode {channick_hilight $0} is now known as {nick $1}}";
    talking_in = "now talking in {channel $0}";
    not_in_channels = "you are not on any channels";
    current_channel = "current channel: {channel $0}";
    names = "{icon_misc {hilight $1} users on {channel $0} ({hilight $2/$3} opped, {hilight $4} voiced, {hilight $5} normal)}";
    names_prefix = "{names_prefix $0}";
    names_nick_op = "{names_nick_op $0 $1}";
    names_nick_halfop = "{names_nick_halfop $0 $1}";
    names_nick_voice = "{names_nick_voice $0 $1}";
    names_nick = "{names_nick $0 $1}";
    endofnames = "";
    chanlist_header = "you are on the following channels:";
    chanlist_line = "{channel $[-10]0} %|+$1 ($2): $3";
    chansetup_not_found = "Channel {channel $0} not found";
    chansetup_added = "channel {channel $0} saved";
    chansetup_removed = "channel {channel $0} removed";
    chansetup_header = "Channel         Network    Password   Settings";
    chansetup_line = "{channel $[15]0} %|$[10]1 $[10]2 $3";
    chansetup_footer = "";
    own_msg = "{msgnick $2 {nick $0}}$1";
    own_msg_channel = "1 $3 $0 $1 $2";
    own_msg_private = "{ownprivmsg msg $0}$1";
    own_msg_private_query = "{ownprivmsgnick {ownprivnick $2}}$1";
    pubmsg_me = "{pubmsgmenick $2 {menick $0}}$1";
    pubmsg_me_channel = "2 $3 $0 $1 $2";
    pubmsg_hilight = "{pubmsghinick $0$3$1}$2";
    pubmsg_hilight_channel = "{pubmsghinick $0 $4 $1{msgchannel $2}}$3";
    pubmsg = "{pubmsgnick $2 {pubnick $0}}$1";
    pubmsg_channel = "5 $3 $0 $1 $2";
    msg_private = "3 $0$1 $2";
    msg_private_query = "{privmsgnick $0}$2";
    no_msgs_got = "{icon_misc you have recieved no messages}";
    no_msgs_sent = "{icon_misc you have sent no messages}";
    query_start = "{icon_join query on {server $1} with {nick $0} started}";
    query_stop = "{icon_part query on {server $1} with {nick $0} closed}";
    no_query = "{icon_misc no query with {nick $0}}";
    query_server_changed = "{icon_misc query with {nick $0} changed to {server $1}}";
    hilight_header = "Highlights:";
    hilight_line = "$[-4]0 $1 $2 $3$4$5";
    hilight_footer = "";
    hilight_not_found = "highlight not found: $0";
    hilight_removed = "highlight removed: $0";
    alias_added = "{icon_mode alias $0 added}";
    alias_removed = "{icon_mode alias $0 removed}";
    alias_not_found = "no such alias: $0";
    aliaslist_header = "Aliases:";
    aliaslist_line = "$[10]0 $1";
    aliaslist_footer = "";
    log_opened = "{icon_misc log {hilight $0} opened}";
    log_closed = "{icon_misc log {hilight $0} closed}";
    log_create_failed = "{icon_err couldn't create log {hilight $0} ({reason $1})}";
    log_locked = "{icon_err log {hilight $0} is locked}";
    log_not_open = "{icon_err log {hilight $0} not open}";
    log_started = "{icon_join log started to {hilight $0}}";
    log_stopped = "{icon_part log stopped to {hilight $0}}";
    log_list_header = "Logs:";
    log_list = "$0 $1: $2 $3$4";
    log_list_footer = "";
    windowlog_file = "{icon_mode window logfile set to $0}";
    windowlog_file_logging = "{icon_misc can't change window's logfile while log is on}";
    no_away_msgs = "{icon_misc no new messages in awaylog}";
    away_msgs = "{hilight $1} new messages in awaylog:";
    module_header = "Module               Type    Submodules";
    module_line = "$[!20]0 $[7]1 $2";
    module_footer = "";
    module_already_loaded = "{icon_err module {hilight $0/$1} already loaded}";
    module_not_loaded = "{icon_err module {hilight $0/$1} is not loaded}";
    module_load_error = "{icon_err error loading module {hilight $0/$1} ({reason $2})}";
    module_invalid = "{icon_err {hilight $0/$1} isn't an Irssi module}";
    module_loaded = "{icon_join module {hilight $0/$1} loaded}";
    module_unloaded = "{icon_part module {hilight $0/$1} unloaded}";
    command_unknown = "{icon_err unknown command: {hilight $0}}";
    command_ambiguous = "{icon_err ambiguous command: $0}";
    option_unknown = "{icon_err unknown option: $0}";
    option_ambiguous = "{icon_err ambiguous option: $0}";
    option_missing_arg = "{icon_err argument missing for $0}";
    not_enough_params = "{icon_err not enough parameters given}";
    not_connected = "{icon_err not connected to server}";
    not_joined = "{icon_err not joined to any channel}";
    chan_not_found = "{icon_err not joined to that channel}";
    chan_not_synced = "channel is not synchronized yet";
    illegal_proto = "{icon_err command not applicable for the chat protocol of the active server}";
    not_good_idea = "add -yes to confirm";
    theme_saved = "{icon_misc theme saved to $0}";
    theme_save_failed = "{icon_err error saving theme to $0 ({reason $1})}";
    theme_not_found = "{icon_err theme {hilight $0} not found}";
    theme_changed = "{icon_mode theme changed to {hilight $0} ($1)}";
    window_theme = "{icon_misc using theme {hilight $0} for this window}";
    window_theme_default = "{icon_misc using default theme for this window}";
    window_theme_changed = "{icon_mode theme for this window changed to {hilight} ($1)}";
    window_theme_removed = "{icon_mode theme changed to default for this window}";
    format_title = "%:[{hilight $0}] - [{hilight $1}]%:";
    format_subtitle = "[{hilight $0}]";
    format_item = "$0 = $1";
    ignored = "{icon_mode ignoring {hilight $1} from {nick $0}}";
    unignored = "{icon_mode unignored {nick $0}}";
    ignore_not_found = "{icon_err {nick $0} is not being ignored}";
    ignore_no_ignores = "{icon_misc there are no ignores}";
    ignore_header = "Ignorance List:";
    ignore_line = "$[-4]0 $1: $2 $3 $4";
    ignore_footer = "";
    unknown_chat_protocol = "{icon_err unknown chat protocol {hilight $0}}";
    unknown_chatnet = "{icon_err unknown network {server $0}}";
    not_toggle = "{icon_err value must be either {hilight on}, {hilight off} or {hilight toggle}}";
    perl_error = "{icon_err perl error: $0}";
    bind_unknown_id = "{icon_err unknown bind action {hilight $0}}";
    config_saved = "{icon_misc configuration saved to {hilight $0}}";
    config_reloaded = "{icon_misc configuration reloaded}";
    config_modified = "{icon_misc configuration file was modified since Irssi was last started}";
    glib_error = "{icon_err glib error $0 ({reason $1})}";
    overwrite_config = "overwrite config (y/N)?";
    set_title = "[{hilight $0}]";
    set_item = "$0 = $1";
    set_unknown = "{icon_err unknown setting {hilight $0}}";
    set_not_boolean = "{icon_err setting {hilight $0} isn't boolean}";
  };
  "fe-text" = {
    lastlog_too_long = "$0 lines, use -force to confirm";
    lastlog_count = "{hilight Lastlog}: $0 lines";
    lastlog_start = "{hilight Lastlog}:";
    lastlog_end = "{hilight End of Lastlog}";
    lastlog_separator = " -";
    refnum_not_found = "{icon_err window $0 not found}";
    window_too_small = "{icon_err not enough room to resize this window}";
    cant_hide_last = "{icon_err can't hide the last window}";
    cant_hide_sticky_windows = "{icon_err can't hide sticky windows}";
    cant_show_sticky_windows = "{icon_err can't show sticky windows}";
    window_not_sticky = "{icon_misc window is not sticky}";
    window_set_sticky = "{icon_mode window set sticky}";
    window_unset_sticky = "{icon_mode window is no longer set sticky}";
    window_info_sticky = "Sticky  : $0";
    window_info_scroll = "Scroll  : $0";
    window_scroll = "window scroll mode is now {hilight $0}";
    window_scroll_unknown = "{icon_err window scroll mode {hilight $0} unknown (must be {hilight on}, {hilight off}, or {hilight default})}";
    statusbar_list_header = "Name                           Type   Placement Position Visible";
    statusbar_list_footer = "";
    statusbar_list = "$[30]0 $[6]1 $[9]2 $[8]3 $4";
    statusbar_info_name = "Statusbar: {hilight $0}";
    statusbar_info_type = "Type     : $0";
    statusbar_info_placement = "Placement: $0";
    statusbar_info_position = "Position : $0";
    statusbar_info_visible = "Visible  : $0";
    statusbar_info_item_header = "Items    : Name                                Priority  Alignment";
    statusbar_info_item_footer = "";
    statusbar_info_item_name = "         : $[35]0 $[9]1 $2";
    statusbar_not_found = "Statusbar doesn't exist: $0";
    statusbar_item_not_found = "Statusbar item doesn't exist: $0";
    statusbar_unknown_command = "{icon_err statusbar command {hilight $0} unknown}";
    statusbar_unknown_type = "{icon_err statusbar type must be {hilight window} or {hilight root}}";
    statusbar_unknown_placement = "{icon_err statusbar placement must be {hilight top} or {hilight bottom}}";
    statusbar_unknown_visibility = "{icon_err statusbar visibility must be {hilight always}, {hilight active} or {hilight inactive}}";
  };
  "fe-common/perl" = {
    script_not_found = "{icon_err {hilight $0} not found}";
    script_not_loaded = "{icon_err {hilight $0} not loaded}";
    script_loaded = "{icon_join loaded {hilight $0}}";
    script_unloaded = "{icon_part unloaded {hilight $0}}";
    no_scripts_loaded = "No scripts are loaded";
    script_list_header = "";
    script_list_line = "{icon_misc $[!15]0 $1}";
    script_list_footer = "";
    script_error = "{icon_err error in {hilight %0}:}";
  };
  "fe-common/irc" = {
    netsplit = "{netsplit Netsplit} {server $0} <-> {server $1} quits: $2";
    netsplit_more = "{netsplit Netsplit} {server $0} <-> {server $1} quits: $2 (+$3 more, use /NETSPLIT to show all of them)";
    netsplit_join = "{netjoin Netsplit} over, joins: $0";
    netsplit_join_more = "{netjoin Netsplit} over, joins: $0 (+$1 more)";
    no_netsplits = "{icon_misc no known netsplits}";
    netsplits_header = "Nick      Channel    Server               Splitted server";
    netsplits_line = "$[9]0 $[10]1 $[20]2 $3";
    netsplits_footer = "";
    setupserver_header = "Server               Port  Network    Settings";
    setupserver_line = "%|$[!20]0 $[5]1 $[10]2 $3";
    setupserver_footer = "";
    joinerror_toomany = "{icon_error cannot join {channel $0} (joined too many channels)}";
    joinerror_full = "{icon_err cannot join {channel $0} (channel is full)}";
    joinerror_invite = "{icon_err cannot join {channel $0} (no invitation)}";
    joinerror_banned = "{icon_err cannot join {channel $0} (banned)}";
    joinerror_bad_key = "{icon_err cannot join {channel $0} (bad key)}";
    joinerror_bad_mask = "{icon_err cannot join {channel $0} (bad mask)}";
    joinerror_unavail = "{icon_err cannot join {channel $0} (temporarily unavailable)}";
    joinerror_duplicate = "{icon_err cannot join {channel $0} (cannot create duplicate)}";
    channel_rejoin = "{icon_err {channel $0} is temporarily unavailable, attempting rejoins...}";
    inviting = "{icon_join inviting {nick $0} to {channel $1}}";
    channel_created = "{icon_misc channel created $1}";
    url = "url for {channelhilight $0}: $1";
    topic = "{icon_misc topic for {channel $0} is \"{bold $1}\"}";
    no_topic = "{icon_misc no topic set for {channel $0}}";
    topic_info = "{icon_misc topic set by {nick $0} ($1)";
    chanmode_change = "{icon_mode {nick $2} sets mode {mode $1}}";
    server_chanmode_change = "{icon_mode {nick $2} sets mode {mode $1}}";
    channel_mode = "{icon_misc mode {mode $1}}";
    bantype = "ban type changed to {channel $0}";
    no_bans = "no bans in channel {channel $0}";
    banlist = "$0 - {channel $1}: ban {ban $2}";
    banlist_long = "$0 - {channel $1}: ban {ban $2} {comment by {nick $3}, $4 secs ago}";
    ebanlist = "{channel $0}: ban exception {ban $1}";
    ebanlist_long = "{channel $0}: ban exception {ban $1} {comment by {nick $2}, $3 secs ago}";
    no_invitelist = "Invite list is empty in channel {channel $0}";
    invitelist = "{channel $0}: invite {ban $1}";
    no_such_channel = "{channel $0}: No such channel";
    channel_synced = "Join to {channel $0} was synced in {hilight $1} secs";
    usermode_change = "{icon_mode mode {mode $0} for user {nick $1}}";
    user_mode = "{icon_misc your user mode is {mode $0}}";
    away = "you are now away";
    unaway = "you are no longer away";
    nick_away = "{icon_misc {nick $0} is away ({reason})}";
    no_such_nick = "{nick $0} does not exist";
    nick_in_use = "{icon_err nick {nick $0} is in use}";
    nick_unavailable = "{icon_err nick {nick $0} is temporarily unavailable}";
    your_nick_owned = "$1@$2 ($3) is currently using the nick $4";
    whois = "{nick $0}!$1@$2 ({comment $3}) $4";
    whowas = "{nick $0}!$1@$2 ({comment $3})";
    whois_idle = "{whois idle %|$1 days $2 hours $3 mins $4 secs}";
    whois_idle_signon = "{whois idle %|$1 days $2 hours $3 mins $4 secs {comment signon: $5}}";
    whois_server = "{whois server %|$1 - {comment $2}}";
    whois_oper = "{whois  {hilight $1}}";
    whois_modes = " {whois modes $1}";
    whois_realhost = "{whois hostname $1-}";
    whois_usermode = "{whois usermode $1}";
    whois_channels = "{whois channels %|$1}";
    whois_away = "{whois away %|$1}";
    whois_special = "{whois  %|{hilight $1}}";
    end_of_whois = "";
    end_of_whowas = "(whowas)";
    whois_not_found = "{icon_err {nick $0} does not exist}";
    who = "{channelhilight $0} $[2]2$3 %|{nick $[-14]1}!$4@$5 ({hilight $6})";
    end_of_who = "";
    own_notice = "{ownnotice notice $0}$1";
    own_action = "{ownaction $0}$1";
    own_action_target = "{ownaction_target $0 $2}$1";
    own_ctcp = "{ownctcp ctcp $0}$1 $2";
    notice_server = "{servernotice $0}$1";
    notice_public = "{notice $0{pubnotice_channel $1}}$2";
    notice_private = "{notice $0{pvtnotice_host $1}}$2";
    action_private = "{pvtaction $0}$2";
    action_private_query = "{pvtaction_query $0}$2";
    action_public = "{pubaction $0}$1";
    action_public_channel = "{pubaction $0{msgchannel $1}}$2";
    ctcp_reply = "{icon_ctcp {nick $1} CTCP {hilight $0}: {bold $2}}";
    ctcp_reply_channel = "CTCP {hilight $0} reply from {nick $1} in channel {channel $3}: $2";
    ctcp_ping_reply = "CTCP {hilight PING} reply from {nick $0}: $1.$[-3.0]2 seconds";
    ctcp_requested = "{icon_ctcp {nick $0}!$1 requested CTCP {hilight $2} from {nick $4}} $3";
    ctcp_requested_unknown = "{ctcp {hilight $0} {comment $1} requested unknown CTCP {hilight $2} from {nick $4}} $3";
    online = "Users online: {hilight $0}";
    pong = "PONG received from $0: $1";
    wallops = "{wallop WALLOP {wallop_nick $0}} $1";
    action_wallops = "{wallop WALLOP {wallop_action $0}} $1";
    kill = "{icon_part killed by {nick $0}!$1 ({reason $2}, path $3 )}";
    kill_server = "You were {error killed} by {server $0} {reason $1} {comment Path: $2}";
    error = "{icon_err $0}";
    unknown_mode = "{icon_err unknown mode character {bold $0}}";
    default_event = "$0 - $1";
    silenced = "{icon_mode silenced {nick $0}}";
    unsilenced = "{icon_mode unsilences {nick $0}}";
    silence_line = "{nick $0}: silence {ban $1}";
    ask_oper_pass = "password: ";
  };
};
